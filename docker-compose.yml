version: "3.9"

services:
  go-prod:
    image: ghcr.io/mangrimen/diverse-back:latest
    container_name: diverse-prod
    restart: always
    profiles:
      - prod
    pull_policy: if_not_present
    build:
      context: .
      dockerfile: deployments/production/Dockerfile
    env_file:
      - .env
    ports:
      - "3030:3030"
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - "backend-data:/var/lib/backend-data"

  go-test:
    image: ghcr.io/mangrimen/diverse-back:develop
    container_name: diverse-test
    restart: always
    profiles:
      - test
    pull_policy: if_not_present
    build:
      context: .
      dockerfile: deployments/production/Dockerfile
    env_file:
      - .env
    environment:
      - SERVER_PORT=${TEST_SERVER_PORT}
    ports:
      - "3040:3040"
    networks:
      - backend
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - "backend-data:/var/lib/backend-data"

  go-dev:
    container_name: diverse-dev
    restart: always
    profiles:
      - dev
    build:
      context: .
      dockerfile: deployments/develop/Dockerfile
    env_file:
      - .env
    environment:
      - SERVER_PORT=${TEST_SERVER_PORT}
    ports:
      - "3030:3030"
      - "40000:40000"
    networks:
      - backend
    volumes:
      - ".:/app:rw,delegated"
      - "backend-data:/var/lib/backend-data"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: diverse-postgres
    image: postgres:14.5-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - backend
    volumes:
      - "./scripts/postgres-initd:/docker-entrypoint-initdb.d:ro"
      - "postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: diverse-pgadmin
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
    networks:
      - backend

  swagger:
    container_name: diverse-swagger
    image: quay.io/goswagger/swagger
    restart: always
    working_dir: "/docs"
    command:
      [
        'serve',
        'swagger.yml',
        '--no-open',
        '--port=3032',
        '--base-path=/api/v1/'
      ]
    volumes:
      - "./docs:/docs"
    networks:
      - backend

  web:
    container_name: diverse-nginx
    profiles:
      - dev
    build:
      context: .
      dockerfile: deployments/develop/NginxReverse.Dockerfile
    restart: always
    ports:
      - "6060:80"
    networks:
      - backend

volumes:
  postgres-data:
  backend-data:


networks:
  backend:
    driver: bridge
