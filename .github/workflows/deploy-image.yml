name: Docker build and deploy

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: ["develop"]
  release:
    types: ["published"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, label) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          target: prod
          file: "./deployments/Backend.Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >>$GITHUB_OUTPUT

      - if: ${{ steps.extract_branch.outputs.branch != 'develop' }}
        name: Deploy on prod server
        uses: appleboy/ssh-action@master
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ github.token }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/$(BASE_DIR)

            git clone https://$TOKEN@github.com/$REPO.git $REPO-$(profile)
            cd $REPO-$(profile)
            git checkout develop
            git pull

            make deploy profile=prod

      - if: ${{ steps.extract_branch.outputs.branch == 'develop' }}
        name: Deploy on test server
        uses: appleboy/ssh-action@master
        env:
          REPO: ${{ github.repository }}
          TOKEN: ${{ github.token }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/$(BASE_DIR)

            git clone https://$TOKEN@github.com/$REPO.git $REPO-$(profile)
            cd $REPO-$(profile)
            git checkout develop
            git pull

            make deploy profile=test
